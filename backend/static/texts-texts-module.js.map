{"version":3,"sources":["webpack:///./src/app/texts/text-filter-by-inconsistency/text-filter-by-inconsistency.component.css","webpack:///./src/app/texts/text-filter-by-inconsistency/text-filter-by-inconsistency.component.html","webpack:///./src/app/texts/text-filter-by-inconsistency/text-filter-by-inconsistency.component.ts","webpack:///./src/app/texts/text-filter-by-users/text-filter-by-users.component.css","webpack:///./src/app/texts/text-filter-by-users/text-filter-by-users.component.html","webpack:///./src/app/texts/text-filter-by-users/text-filter-by-users.component.ts","webpack:///./src/app/texts/text-form/text-form.component.css","webpack:///./src/app/texts/text-form/text-form.component.html","webpack:///./src/app/texts/text-form/text-form.component.ts","webpack:///./src/app/texts/text-historic-form/text-historic-form.component.css","webpack:///./src/app/texts/text-historic-form/text-historic-form.component.html","webpack:///./src/app/texts/text-historic-form/text-historic-form.component.ts","webpack:///./src/app/texts/text-historic/text-historic.component.css","webpack:///./src/app/texts/text-historic/text-historic.component.html","webpack:///./src/app/texts/text-historic/text-historic.component.ts","webpack:///./src/app/texts/text-processed-front/text-processed-front.component.css","webpack:///./src/app/texts/text-processed-front/text-processed-front.component.html","webpack:///./src/app/texts/text-processed-front/text-processed-front.component.ts","webpack:///./src/app/texts/text-processed/text-processed.component.css","webpack:///./src/app/texts/text-processed/text-processed.component.html","webpack:///./src/app/texts/text-processed/text-processed.component.ts","webpack:///./src/app/texts/text-shared-dialog/text-shared-dialog.component.css","webpack:///./src/app/texts/text-shared-dialog/text-shared-dialog.component.html","webpack:///./src/app/texts/text-shared-dialog/text-shared-dialog.component.ts","webpack:///./src/app/texts/text-shared-with-me/text-shared-with-me.component.css","webpack:///./src/app/texts/text-shared-with-me/text-shared-with-me.component.html","webpack:///./src/app/texts/text-shared-with-me/text-shared-with-me.component.ts","webpack:///./src/app/texts/text-view-corrections/text-view-corrections.component.css","webpack:///./src/app/texts/text-view-corrections/text-view-corrections.component.html","webpack:///./src/app/texts/text-view-corrections/text-view-corrections.component.ts","webpack:///./src/app/texts/texts.component.css","webpack:///./src/app/texts/texts.component.html","webpack:///./src/app/texts/texts.component.ts","webpack:///./src/app/texts/texts.module.ts","webpack:///./src/app/texts/texts.routing.module.ts"],"names":[],"mappings":"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","file":"texts-texts-module.js","sourcesContent":["module.exports = \"#text-user-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#boxSuggestion {\\n    padding: 10px;\\n    margin: 2px;\\n    display: inline-flex;\\n    word-break: break-all;\\n    border: 1px solid lightgray;\\n    border-radius: 5px;\\n    margin-top: 40px !important;\\n}\\n\\ntable {\\n    width: 100%;\\n    max-height: 400px;\\n    overflow: auto;\\n}\\n\\n#positionRight {\\n    float: right;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n}\"","module.exports = \"<div style=\\\"padding: 10px 10px 15px 10px;\\\" class=\\\"header-color-primary\\\">\\n\\n  <div fxLayout=\\\"col\\\">\\n    <mat-card-title style=\\\"width: 100%; margin-top: 0px !important;\\\">Personalizar conjunto de regras</mat-card-title>\\n    <mat-icon class=\\\"mouse-cursor-pointer\\\"  style=\\\"float: right; color:white !important\\\" matSuffix (click)=\\\"closeModal()\\\">{{ 'close' }}</mat-icon>     \\n  </div>\\n  <div fxLayout=\\\"col\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"boxButtons\\\">\\n    <mat-form-field fxFlex=\\\"100%\\\">\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\n      <mat-icon class=\\\"mouse-cursor-pointer\\\"  matSuffix>{{ 'search' }}</mat-icon>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"select\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                            [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                            [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n              </mat-checkbox>\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n              <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                            (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                            [checked]=\\\"selection.isSelected(row)\\\">\\n              </mat-checkbox>\\n            </td>\\n          </ng-container>\\n    \\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Nome </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n        </ng-container>\\n            \\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"pattern\\\">\\n          <th mat-header-cell *matHeaderCellDef width=\\\"100px\\\"> Padrão </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.pattern}} </td>\\n        </ng-container>\\n\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"user\\\">\\n          <th mat-header-cell *matHeaderCellDef width=\\\"100px\\\"> Inserida por </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.username }} </td>\\n        </ng-container>\\n\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"description\\\">\\n          <th mat-header-cell *matHeaderCellDef width=\\\"100px\\\"> Descrição </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    \\n      <!--mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator -->\\n  </div>\\n\\n  <div>\\n    <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"[]\\\" id=\\\"positionRight\\\">Cancelar</button>\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"filterByInconsistenciesId()\\\" id=\\\"positionRight\\\">Aplicar</button>\\n  </div>\\n</div>\"","import { TextsService } from './../texts.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { RulesService } from './../../rules/rules.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-text-filter-by-inconsistency',\n  templateUrl: './text-filter-by-inconsistency.component.html',\n  styleUrls: ['./text-filter-by-inconsistency.component.css']\n})\nexport class TextFilterByInconsistencyComponent implements OnInit {\n\n  inconsistencies: any = []\n  userIds:any = []\n  constructor(\n    private rulesService: RulesService,\n    private textsService: TextsService,\n    private matDialogRef: MatDialogRef<TextFilterByInconsistencyComponent>,\n    @Inject(MAT_DIALOG_DATA) public dataSource: any,\n  ) {  }\n\n  ngOnInit() {   \n\n    this.getAllInconsistencies();\n  }\n\n  ELEMENT_DATA:  any;\n  displayedColumns: string[] = [ 'select', 'name', 'pattern', 'user', 'description'];\n  selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  getAllInconsistencies() {\n    this.textsService.currentMessageUser.subscribe((response:any) => {\n      if(response.dataFilter!=null) {\n        this.rulesService\n          .getAllInconsistencies()\n            .subscribe(\n              (result:any) => {\n                //console.log(\"Response: \", response.dataFilter)\n                response.dataFilter.forEach(idUser => {\n                  result.forEach(rule => {\n                    if(rule.user == idUser) {\n                      this.inconsistencies.push(rule)\n                    }\n                  });\n                })\n                this.dataSource = new MatTableDataSource<any>(this.inconsistencies);\n                this.dataSource.paginator = this.paginator;\n                this.selection = new SelectionModel<any>(true, this.inconsistencies);\n              })        \n      }\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n    this.selection.clear() :\n    this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  isOnlyOneSelected() {\n    return (this.selection.selected.length == 1) ? false : true;\n  }\n\n  filterByInconsistenciesId() {\n    let inconsistenteciesIds = []\n    for(let item of this.selection.selected)\n      inconsistenteciesIds.push(item.id);\n    return inconsistenteciesIds;\n  }\n\n  public closeModal() {\n    this.matDialogRef.close();\n  }\n}\n","module.exports = \".container-shared-table {\\n    overflow: auto;\\n    max-height: 400px;\\n    margin-top: 10px;\\n}\\n\\n#boxSuggestion {\\n    padding: 10px;\\n    margin: 2px;\\n    display: inline-flex;\\n    word-break: break-all;\\n    border: 1px solid lightgray;\\n    border-radius: 5px;\\n}\\n\\ntable {\\n    width: 100%;\\n}\\n\\n#positionRight {\\n    float: right;\\n    margin-top: 20px;\\n}\"","module.exports = \"<mat-card>\\n<div>\\n  O usuário pode aplicar regras ao texto de três formas:\\n  <ol>\\n    <li>Padrão: As regras disponíveis no conjunto padrão do sistema são aplicadas no texto.</li>\\n    <li>Usuários: Selecionar os usuários e aplicar as regras inseridas por eles.</li>\\n    <li>Personalizar regras: Selecionar autores disponíveis e selecionar regras apropriadas.</li>\\n  </ol>\\n</div>\\n<div fxLayout=\\\"col\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"boxButtons\\\">\\n  <mat-form-field fxFlex=\\\"100%\\\">\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\n    <mat-icon class=\\\"mouse-cursor-pointer\\\" matSuffix>{{ 'search' }}</mat-icon>\\n  </mat-form-field>\\n</div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8 container-shared-table\\\">\\n    \\n    <ng-container matColumnDef=\\\"select\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n      </mat-checkbox>\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n          (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n          [checked]=\\\"selection.isSelected(row)\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n  \\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"first_name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Nome </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.first_name}} </td>\\n  </ng-container>\\n  \\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"type\\\">\\n    <th mat-header-cell *matHeaderCellDef width=\\\"100px\\\"> Perfil </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role == 1 ? 'Estudante' : 'Professor(a)'}} </td>\\n  </ng-container>\\n   \\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<mat-card-actions>\\n  <div style=\\\"min-height: 35px;  margin-right: 15px;\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" style=\\\"float: right;\\\">Aplicar</button>\\n  </div>\\n</mat-card-actions>\\n</mat-card>\"","import { TestComponent } from './../../test/test.component';\nimport { TextFilterByInconsistencyComponent } from './../text-filter-by-inconsistency/text-filter-by-inconsistency.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatPaginator, MatTableDataSource, MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { UsersService } from '../../users/users.service';\nimport { TextsService } from '../texts.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { RulesService } from '../../rules/rules.service';\n\n@Component({\n  selector: 'app-text-filter-by-users',\n  templateUrl: './text-filter-by-users.component.html',\n  styleUrls: ['./text-filter-by-users.component.css']\n})\n\nexport class TextFilterByUsersComponent implements OnInit {\n\n  constructor(\n    private http: HttpClient,\n    private textsService: TextsService,\n    private usersService: UsersService,\n    private rulesService: RulesService,\n   private dialog: MatDialog\n  ) {  }\n\n  users: any = []\n  ELEMENT_DATA:  any;\n  displayedColumns: string[] = [ 'select', 'first_name', 'type'];\n  selection:any = new SelectionModel<any>(true, []);\n  dataSource: any = []\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  private configuration =  {\n    filter: null,\n    dataFilter: null\n  }\n\n  ngOnInit() {\n    this.getAllUsers();\n    this.configuration.filter = 'USERS';\n    this.configuration.dataFilter = [1];\n    this.textsService.updateDataUser(this.configuration)\n  }\n\n  getAllUsers() {\n    this.usersService.getUsers().subscribe(\n      (data: any) => {this.ELEMENT_DATA = [...data]; \n                      this.dataSource = new MatTableDataSource<any>(this.ELEMENT_DATA);\n                      this.dataSource;\n                      this.dataSource.paginator = this.paginator;\n                      this.dataSource.data.forEach(element => {\n                        if(element.id == 1){\n                          this.selection = new SelectionModel<any>(true, [element]);\n                        }\n                      });\n      },\n      error => {console.log(\"Erro ao buscar dados: \", error.error), alert(error.error)}\n    );   \n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n    this.selection.clear() :\n    this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  isOnlyOneSelected() {\n    return (this.selection.selected.length == 1) ? false : true;\n  }\n\n  filterByUsersId() {\n    let userIds = []\n    for(let item of this.selection.selected)\n      userIds.push(item.id);\n    return userIds;\n  }\n\n  openFilterByInconsistencies() {\n    const dialogRef = this.dialog.open(TextFilterByInconsistencyComponent, { disableClose: true });\n      dialogRef\n        .afterClosed()\n          .subscribe(result => {\n            if(result != null && result.length != 0) {\n              this.configuration.filter = 'INCONSISTENCY';\n              this.configuration.dataFilter = result;\n              this.textsService.updateDataUser(this.configuration)\n            }\n            this.dialog.closeAll();\n          });   \n  }\n\n  onSubmit() {\n    this.configuration.filter = 'USERS';\n    this.configuration.dataFilter = this.filterByUsersId();    \n    this.textsService.updateDataUser(this.configuration);\n\n    const dialogConfig = this\n                          .dialog\n                            .open(TestComponent, { disableClose: true,\n                                data: {\n                                  title: 'Personalizar conjunto de regras',\n                                  content: 'Você deseja personalizar o conjunto de regras?',\n                                  buttonConfirm: 'Sim',\n                                  buttonCancel: 'Não'}\n      });\n    \n    dialogConfig\n      .afterClosed()\n        .subscribe(response => {\n          if(response) {\n            this.openFilterByInconsistencies()\n          }else {\n            this.dialog.closeAll()\n          }\n          this.textsService.updateDataUser(this.configuration)\n        })\n  }\n}\n","module.exports = \"form {\\n   /*display: flex;*/\\n    flex-direction: row;\\n}\\n\\n#checkText, #correctionText {\\n    width: 100%;\\n    min-height: 300px;\\n    border: lightgray 1px solid;\\n}\\n\\n#formButtons {\\n    float: right;\\n    margin-left: 1.2px;\\n}\\n\\n#formButtons button {\\n    margin-right: 5px; \\n}\\n\\n\"","module.exports = \"<form [formGroup]=\\\"formText\\\">\\n  <div fxLayout=\\\"row\\\">\\n    <mat-card fxFlex=\\\"applyConfigurations ? 100% : 50%\\\" class=\\\"header-color\\\">\\n        <div fxLayout=\\\"col\\\">\\n            <mat-card-title style=\\\"width: 85%;\\\">Texto para revisão</mat-card-title>\\n            <button style=\\\"float: right; margin-top: -16px; height: 36px; padding-right: 4%;\\\" mat-button color=\\\"primary\\\" (click)=\\\"openConfiguration()\\\">\\n              Configuração da revisão\\n              <mat-icon matSuffix> {{ 'settings' }}</mat-icon>\\n            </button>\\n          </div>\\n      <textarea  id=\\\"checkText\\\" formControlName=\\\"content\\\"></textarea>\\n      <mat-card-actions id=\\\"formButtons\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"\\\">Enviar texto</button>\\n      </mat-card-actions>\\n    </mat-card>\\n    <div fxFlex=\\\"50%\\\" [style.display]=\\\"!applyConfigurations?'block':'none'\\\">\\n      <app-text-filter-by-users></app-text-filter-by-users>\\n    </div>\\n  </div>\\n</form>\\n\"","import { MatDialog } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { TextsService } from './../texts.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nclass Data {\n  content: any \n}\n@Component({\n  selector: 'app-text-form',\n  templateUrl: './text-form.component.html',\n  styleUrls: ['./text-form.component.css']\n})\nexport class TextFormComponent implements OnInit {\n\n  inputText: any;\n  formText: FormGroup;\n  applyConfigurations: boolean = true;\n  actived: boolean = false;\n  panelOpenConfiguration = false;\n  constructor(private textsService: TextsService,\n              private formBuilder: FormBuilder,\n              private router: Router,\n              private dialog: MatDialog\n  ) {  }\n\n  ngOnInit() {\n    this.formText = this.formBuilder.group({\n      editMode: false,\n      idText: 0,\n      content: [null],\n      filter: [null],\n      dataFilter: [null]\n    });\n\n    this.formText.get('content').setValue(\"Estas duas palavras urso - esse e este - existem neste na língua portuguesa e estão corretas. São palavras esse parecidas, mas utilizadas em situações-se isso diferentes. O que isso distingue estes dois conceitos é uma-se questão referencial: tempo e espaço.\\n\\nEste e esse são pronomes demonstrativos, situando alguém ou alguma coisa no tempo, no espaço e no discurso em relação às próprias pessoas nesse do discurso.\")\n  }\n\n  showInput(){    \n    console.log(this.formText.value)\n  }\n\n  onSubmit() {\n    let data:any = []\n\n    this.textsService.currentMessageUser.subscribe(message => {\n      data = message\n    });\n\n    this.formText.get('filter').setValue(data.filter);\n    this.formText.get('dataFilter').setValue(data.dataFilter);\n\n    if(this.formText.value!=null) {\n      this.textsService.postText(this.formText.value).subscribe(\n        (data: Data) => {\n          console.log(data);\n          this.textsService.updateData(data);//shared the data\n          this.applyConfigurations = false;\n          this.router.navigate(['/texts/text-processed']);//change route\n      });\n    }\n  }\n  openConfiguration() {\n    this.applyConfigurations = !this.applyConfigurations;\n  }\n}\n","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n    width: 450px;\\n}\\n\\n#formButtons {\\n    float: right;\\n    margin-left: 1.2px;\\n}\\n\\n#formButtons button {\\n    margin-right: 5px; \\n}\"","module.exports = \"<div class=\\\"header-color-primary\\\" style=\\\"padding: 23px;\\\">\\n<mat-card-header>\\n    <mat-card-title>Salvar revisão</mat-card-title>\\n  </mat-card-header>\\n<form [formGroup]=\\\"formHistoryChangesText\\\" class=\\\"example-container\\\">\\n  <mat-form-field>\\n      <input matInput placeholder=\\\"Nome\\\" formControlName=\\\"name\\\" [(value)]=\\\"formHistoryChangesText.get('name').value\\\">\\n      <mat-error *ngIf=\\\"formHistoryChangesText.get('name').invalid\\\">Nome não pode ser nulo!</mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Descrição\\\" formControlName=\\\"description\\\" [(value)]=\\\"formHistoryChangesText.get('description').value\\\"></textarea>\\n    <mat-error *ngIf=\\\"formHistoryChangesText.get('description').invalid\\\">A descrição não pode ser nula!</mat-error>\\n  </mat-form-field>\\n</form>\\n<mat-card-actions id=\\\"formButtons\\\">\\n  <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"disabledSubmit()\\\" [mat-dialog-close]=\\\"formHistoryChangesText.value\\\">Salvar</button>\\n  <button mat-button color=\\\"primary\\\"  [mat-dialog-close]=\\\"false\\\">Cancelar</button>\\n</mat-card-actions>\\n</div>\"","import { map } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TextsService } from './../texts.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-text-historic-form',\n  templateUrl: './text-historic-form.component.html',\n  styleUrls: ['./text-historic-form.component.css']\n})\nexport class TextHistoricFormComponent implements OnInit {\n\n\n  formHistoryChangesText: FormGroup; //represent the form\n  dataText = null\n  constructor(\n    private matDialogRef: MatDialogRef<TextHistoricFormComponent>, \n    @Inject(MAT_DIALOG_DATA) public dataSource: any,\n    private formBuilder: FormBuilder,\n    private textsService: TextsService,\n    private activateRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    \n    this.formHistoryChangesText = this.formBuilder.group({\n      name: [null, Validators.required],\n      description: [null, Validators.required]      \n    });\n\n    this.getInfo()\n  }\n\n  getInfo() {\n    if(this.dataSource.editMode && this.dataSource.idText!=null && this.dataSource.idText>0) {\n      console.log(\"this.dataSource.editMode: \", this.dataSource)\n     \n      this.textsService.getTextsHistoric(this.dataSource.idText).subscribe((response:any) => {\n        this.formHistoryChangesText.get('name').setValue(response.name)\n        this.formHistoryChangesText.get('description').setValue(response.description)\n \n        console.log(\"InfoText: \", response)\n      })\n    }\n  }\n\n  removeSpace(x) {\n    if(x!=null && x!='' && typeof(x) != 'undefined')\n      return x.replace(/^\\s+|\\s+$/gm,'');\n    return null\n  }\n\n  disabledSubmit() {\n    let name = \"\"\n    let description = \"\"\n    let disabled = false\n    name = this.removeSpace(this.formHistoryChangesText.get('name').value)\n    description = this.removeSpace(this.formHistoryChangesText.get('description').value)\n    if(name==null || name=='' || typeof(name) == 'undefined'){\n      disabled = true\n    }\n    if(description==null || description=='' || typeof(description) == 'undefined') {\n      disabled = true\n    }\n    return disabled\n  }\n\n  public closeModal() {\n    this.matDialogRef.close();\n  }\n\n}\n","module.exports = \".container-shared-table {\\n    overflow: auto;\\n    max-height: 500px;\\n    margin-top: 10px;\\n}\\n\\ntable {\\n    width: 100%;\\n}\\n\\ntd.mat-cell, th.mat-header-cell {\\n    padding: 5px !important;\\n}\"","module.exports = \"<div fxLayout=\\\"col\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"boxButtons\\\">\\n  <mat-form-field fxFlex=\\\"50%\\\">\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\n    <mat-icon class=\\\"mouse-cursor-pointer\\\"  matSuffix>{{ 'search' }}</mat-icon>\\n  </mat-form-field>\\n  <div fxFlex=\\\"50%\\\" [style.display]=\\\"isMultiSelected() ? 'block' : 'none'\\\">\\n    <div style=\\\"float: right\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"postSharedTextSelected()\\\">\\n          Compartilhar selecionados\\n        <mat-icon matSuffix >  {{ 'share' }}</mat-icon>\\n      </button> \\n      <button mat-button color=\\\"primary\\\" (click)=\\\"deleteSelected()\\\">\\n        Excluir selecionados \\n        <mat-icon matSuffix > {{ 'delete' }}</mat-icon>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"mat-elevation-z8 container-shared-table\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"select\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                            [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                            [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n              </mat-checkbox>\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" >\\n              <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                            (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                            [checked]=\\\"selection.isSelected(row)\\\">\\n              </mat-checkbox>\\n            </td>\\n          </ng-container>\\n  \\n      <!-- Symbol Column -->\\n      <ng-container matColumnDef=\\\"created\\\">\\n        <th mat-header-cell *matHeaderCellDef> Data </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" > {{ element.created | date:'dd-MM-yyyy' }} </td>\\n      </ng-container>\\n      \\n      <!-- Position Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Nome </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" > {{ element.name }} </td>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef> Descrição </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" > <span  matTooltip=\\\"{{ element.description }}\\\">{{ (element.description.length>100) ? element.description.slice(0,50)+'...' : element.description }}</span> </td>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"text\\\">\\n        <th mat-header-cell *matHeaderCellDef> Texto </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" > <span  matTooltip=\\\"{{ element.text }}\\\">{{ (element.text.length>100) ? element.text.slice(0,50)+'...' : element.text }}</span> </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"option\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n           \\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            <div [style.display]=\\\"isOnlyOneSelected(element.id) ?'none':'inline-flex'\\\">\\n              <mat-icon class=\\\"mouse-cursor-pointer\\\" matSuffix (click)=\\\"redirectTo(element)\\\">{{ 'visibility' }}</mat-icon> \\n              <mat-icon class=\\\"mouse-cursor-pointer\\\" matSuffix (click)=\\\"postSharedTextSelected()\\\">{{ 'share' }}</mat-icon>     \\n              <mat-icon class=\\\"mouse-cursor-pointer\\\" matSuffix (click)=\\\"openEdit()\\\">{{ 'edit' }}</mat-icon>     \\n              <mat-icon class=\\\"mouse-cursor-pointer\\\" matSuffix (click)=\\\"deleteSelected()\\\">{{ 'delete' }}</mat-icon>\\n            </div>\\n          </td>\\n        </ng-container>\\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  \\n    <!--mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator!-->\\n  </div>\"","import { TextSharedDialogComponent } from './../text-shared-dialog/text-shared-dialog.component';\nimport { Router } from '@angular/router';\nimport { TestComponent } from './../../test/test.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TextsService } from './../texts.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-text-historic',\n  templateUrl: './text-historic.component.html',\n  styleUrls: ['./text-historic.component.css']\n})\nexport class TextHistoricComponent implements OnInit {\n\n  constructor(private textsService: TextsService,\n    private router: Router, \n    private dialog: MatDialog\n  ) { }\n\n  ELEMENT_DATA:  any;\n  displayedColumns: string[] = [ 'select', 'created', 'name', 'description', 'text', 'option'];\n  dataSource: any;\n  selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnInit() {\n    console.log(\"Get All texts\")\n    this.getAllTextsHistoric();\n  }\n\n  getAllTextsHistoric() {\n    this.textsService.getAllTextsHistoric().subscribe(\n      (data: any) => {this.ELEMENT_DATA = [...data]; \n                  this.dataSource = new MatTableDataSource<any>(this.ELEMENT_DATA);\n                  this.dataSource.paginator = this.paginator;                  \n      },\n      error => {console.log(\"Erro ao buscar dados: \", error.error), alert(error.error)}\n    );   \n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n    this.selection.clear() :\n    this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  isMultiSelected() {\n    return (this.selection.selected.length > 1) ? true : false;\n  }\n\n  isOnlyOneSelected(id) {\n    return ((this.selection.selected.length == 1) && this.selection.selected[0].id==id ) ? false : true;\n  }\n\n  openEdit() {\n    console.log(this.selection.selected[0])\n    let textHistoric = this.selection.selected[0];\n    let data = {\n      editMode: true,\n      idText: textHistoric.id,\n      content: textHistoric.text,\n      filter: [],\n      dataFilter: [],\n      lastEditions: textHistoric.changesInText\n    };\n    this.textsService.updateData(data)\n    this.router.navigate(['/texts/text-processed', textHistoric.id])\n  }\n\n  getUserIdToEmails() {\n    let userIds = []\n    const dialogRef = this.dialog.open(TextSharedDialogComponent, { width: '80%', disableClose: true });\n    dialogRef\n      .afterClosed()\n        .subscribe(result => {\n            userIds = result\n            console.log(\"userIds:\", userIds,result)\n        });\n    return userIds;\n  }\n  \n  postSharedTextSelected() {\n    const dialogRef = this.dialog.open(TextSharedDialogComponent, { width: '80%', disableClose: true });\n    dialogRef\n      .afterClosed()\n        .subscribe(result => {\n          if(result.length) {\n            if(this.selection.selected.length){\n              this.selection.selected.forEach(element =>{\n                let idUser = element.user;\n                let textId = element.id;\n                let sharedUser:any = result;\n  \n                let data = {\n                  onwerUser: idUser,\n                  sharedUser: '',\n                  historyChangesText: textId\n                }\n\n                for(let user of sharedUser){\n                  data.sharedUser = user\n                  this.textsService.postSharedText(data).subscribe(response =>{\n                    console.log(\"Enviar email selected: \", response)\n                    //enviar email aqui\n                  })\n                }\n            });\n          }\n        }\n      });\n    }       \n  \n  sendEmail() {\n    let data = {\n      subject: 'Um texto foi compartilhado',\n      message: 'Um texto foi compartilhado',\n      recipient_list: ['arley.sribeiro@gmail.com',]\n    }\n    this.textsService.postSendEmail(data).subscribe( response => {\n      console.log(response)\n    });\n  }\n\n  redirectTo(item) {\n    console.log(item)\n    this.router.navigate(['texts/text-view-corrections/', item.id])\n  }\n\n  deleteSelected() {\n    let length = this.selection.selected.length\n    let title = length > 1 ? 'Deseja excluir os textos selecinados do histórico de revisões' : 'Deseja excluir o texto selecionado do histórico de revisões';\n    let content = 'Após essa operação ' + length +  (length > 1 ? ' registros serão excluídos.' : 'registro será excluído.');\n    const dialogRef = this.dialog.open(TestComponent, {data: {title: title, content: content, buttonConfirm: 'Sim', buttonCancel: 'Não'}});\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      if(result) {       \n        if(length) {\n          this.selection.selected.forEach((item, index) => {        \n            this.textsService.deleteHistoricText(item.id).subscribe(response=>{\n              console.log(\"Foi deletado: \", item.id)\n              if(index == length-1){\n                this.getAllTextsHistoric();   \n                this.selection.clear()\n              }\n            })\n          })       \n        }\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"\\\">\\n    <div fxLayout=\\\"row\\\">\\n      <mat-card fxFlex=\\\"checkText ? 100% : 50%\\\">\\n        <div id=\\\"correctionText\\\">\\n          <span>\\n            {{data}}\\n          </span>\\n        </div>\\n      </mat-card>\\n      <mat-card fxFlex=\\\"50%\\\">\\n        <div id=\\\"correctionHistoric\\\"></div>\\n          <mat-card-actions id=\\\"formButtons\\\">\\n              <button mat-raised-button color=\\\"primary\\\" >Salvar</button>\\n              <button mat-stroked-button color=\\\"primary\\\">Voltar</button>\\n          </mat-card-actions>\\n        </mat-card>\\n    </div>\\n</form>\\n\\n  \\n  \"","import { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { TextsService } from './../texts.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n/*class tipo {\n  originalText: any\n  content: any\n  matches: any\n  inconsistencies: any\n}*/\n@Component({\n  selector: 'app-text-processed-front',\n  templateUrl: './text-processed-front.component.html',\n  styleUrls: ['./text-processed-front.component.css']\n})\n\nexport class TextProcessedFrontComponent implements OnInit {\n  data: any;\n  inconsistencyDetails: any;\n  inputText: any;\n  formText: FormGroup;\n  teste: any;\n  constructor(private textsService: TextsService,\n              private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.formText = this.formBuilder.group({\n      content: [null]\n    });\n    this.textsService.currentMessage.subscribe(message => {\n      this.data = message\n      console.log(\"Data: \", this.data)\n    });\n\n    this.currentDetails.subscribe(message => {\n      this.inconsistencyDetails = message\n      console.log(\"Inconsistency details: \", this.inconsistencyDetails)\n    });\n\n    this.process();\n  }\n \n  showData() {\n    this.textsService.currentMessage.subscribe(message => this.data = message)\n    console.log(this.data)\n  }\n  \n  newData(data) {\n    this.textsService.updateData(data);\n  }\n  \n  private dataDetails = new BehaviorSubject(\"\");\n  private currentDetails = this.dataDetails.asObservable();\n\n  updateDetails (data: any){\n    this.dataDetails.next(data);\n  }\n\n  showInput(){    \n    console.log(this.formText.value)\n  }\n\n  onSubmit() {\n    if(this.formText.value!=null) {\n      console.log(this.formText.value)\n      this.textsService.postText(this.formText.value).subscribe(\n        data => {\n          console.log(data)\n      });\n    }\n  }\n\n  closeTooltip: boolean = false\n  openTips(id:any, item) {\n    console.log(item)\n    this.closeTooltip = true\n    document.getElementById(id).style.visibility = 'visible';\n\n    for(let inconsistency of this.data.inconsistencies){\n      if(item.inconsistency_id == inconsistency.id){\n        this.updateDetails(inconsistency)\n        console.log(\"inconsistency: \", inconsistency)\n      }\n    }\n  }\n\n  closeTips(id:any) {\n    this.closeTooltip = false;\n    document.getElementById(id).style.visibility = 'hidden';\n  }\n\n  changeTip(id:any, suggestion, item, index) {\n    console.log(\"teste: \", id, suggestion, item, index)\n    this.closeTooltip = false;\n    this.data.matches[index].match = false;\n    this.data.matches[index].content = suggestion\n    document.getElementById(id).style.backgroundColor = 'rgb(255,255,255)';\n    document.getElementById(id).className = 'none';\n    this.updateDetails(\"\")\n  }\n\n  process() {\n    //let text = this.data.originalText;\n    //let re = this.data.inconsistencies[0].pattern;\n    //let result = re.exec(text);\n  }\n\n}\n","module.exports = \"form {\\n    /*display: flex;*/\\n     flex-direction: row;\\n     display: -ms-grid;\\n     display: grid;\\n }\\n \\n #correctionHistoric, #correctionText {\\n     width: 100%;\\n     border: lightgray 1px solid;\\n }\\n \\n #formButtons {\\n     float: right;\\n     margin-left: 1.2px;\\n }\\n \\n #formButtons button {\\n     margin-right: 5px; \\n }\\n \\n .tooltip {\\n    position: relative;\\n    display: inline-block;\\n    border-bottom: 1px dotted black;\\n}\\n \\n .tooltip .tooltiptext {\\n    visibility: hidden;\\n    /*width: 150px;*/\\n    background-color: #a0c3f8;\\n    color: rgb(4, 62, 121);\\n    text-align: center;\\n    border-radius: 6px;\\n    border: solid 1px #a0c3f8;\\n    \\n    /* Position the tooltip */\\n    position: absolute;\\n    z-index: 1;\\n    top: 100%;\\n    left: 50%;\\n    margin-left: -16px;\\n}\\n \\n .tooltip .tooltiptext::after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    bottom: 100%;\\n    left: 10%;\\n    margin-left: -5px;\\n    border-width: 5px;\\n    border-style: solid;\\n    border-color: transparent transparent #a0c3f8 transparent;\\n}\\n \\n .tooltiptext button{\\n    width: 100%\\n}\\n \\n .ignoreSuggestion {\\n    background: linear-gradient(to top,  #FFFFFF 36px, #a0c3f8 36px) !important;\\n}\\n \\n .mat-card-title-no-margin-bottom {\\n    margin-bottom: 0px;\\n    -ms-grid-row-align: center;\\n        align-self: center;\\n}\\n \\n [contenteditable]:focus {\\n    outline: 0px solid transparent;\\n}\\n \\n .mat-card, .mat-expansion-panel {\\n    margin: 5px;\\n}\"","module.exports = \"<form [formGroup]=\\\"formText\\\">\\n  <div fxLayout=\\\"row\\\">\\n    <mat-card fxFlex=\\\"checkText ? 100% : 50%\\\" class=\\\"header-color\\\">\\n      <!--button (click)=\\\"editTextP()\\\">Editar texto</button-->\\n      <div fxLayout=\\\"col\\\">\\n        <mat-card-title style=\\\"width: 75%;\\\">Texto verificado</mat-card-title>\\n        <button style=\\\"float: right; margin-top: -16px; height: 36px;\\\" \\n                mat-button color=\\\"primary\\\" \\n                (click)=\\\"resubmitText()\\\"\\n                [style.display]=\\\"data.matches == null ? 'none' : 'block'\\\">Verificar novamente\\n          <mat-icon matSuffix class=\\\"mouse-cursor-pointer\\\">{{ 'replay' }}</mat-icon>\\n        </button>\\n      </div>\\n      <div id=\\\"correctionText\\\" contenteditable=\\\"false\\\">\\n        <span *ngFor=\\\"let item of data.matches; let idx = index\\\"\\n              id=\\\"{{ item.start}}{{ item.end }}\\\"\\n              [ngClass]=\\\"(item.match) ? 'tooltip' : 'none'\\\"\\n              [style.background-color]=\\\"item.match ? '#FFFF00' : 'none'\\\"\\n              (click)=\\\"item.match ? openTips('div-'+item.start+''+item.end, item) : 'none'\\\"\\n              (mouseleave)=\\\"(item.match && closeTooltip) ? closeTips('div-'+item.start+''+item.end) : 'none'\\\">\\n              \\n              {{item.content}}\\n          \\n              <div class=\\\"tooltiptext ignoreSuggestion\\\"\\n                  id=\\\"div-{{ item.start}}{{ item.end }}\\\"\\n                  *ngIf=\\\"item.match && item.content!='\\\\n'\\\">\\n            \\n                <div *ngFor=\\\"let inconsistency of data.inconsistencies\\\">\\n                  <div *ngFor=\\\"let suggestion of inconsistency.suggestions\\\">\\n                    <button mat-button (click)=\\\"changeTip(item.start+''+item.end, suggestion, item, idx)\\\"\\n                            *ngIf=\\\"item?.inconsistency_id == suggestion.inconsistency_id\\\">\\n                      {{ suggestion.tip }}\\n                    </button>\\n                  </div>\\n                </div>                \\n                <button mat-button (click)=\\\"ignoreSuggestion(item, idx)\\\">\\n                  Ignorar Sugestão\\n                </button>\\n              </div>\\n        </span>\\n      </div>\\n\\n      <mat-card-actions id=\\\"formButtons\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"data.matches == null\\\">Salvar revisão</button>\\n        <button mat-button color=\\\"primary\\\"\\n                [disabled]=\\\"sharedDisabled\\\"\\n                [style.display]=\\\"sharedDisabled ? 'none' : 'initial'\\\"\\n                (click)=\\\"postSharedTextSelected()\\\">\\n          Compartilhar revisão\\n          <mat-icon matSuffix class=\\\"mouse-cursor-pointer\\\"> {{ 'share' }}</mat-icon>\\n        </button>\\n      </mat-card-actions>\\n\\n    </mat-card>\\n      <div fxFlex=\\\"50%\\\">\\n        <mat-card style=\\\"margin-bottom: 5px;\\\"                  \\n                  [ngClass]=\\\"hiddenElementNoSuggestion ? 'custom-card-suggestion' : 'none'\\\"\\n                  [style.border]=\\\"hiddenElementNoSuggestion ? '1px dotted #3f51b5' : 'none'\\\"\\n                  class=\\\"header-color\\\">\\n          <mat-card-title >{{ hiddenElementNoSuggestion ?   'Sugestão' : 'Sem marcação selecionada'}}</mat-card-title>\\n          <div [style.display]=\\\"hiddenElementNoSuggestion ? 'none' : 'inherit'\\\">\\n            {{ existInconsistency() ? 'Clique em uma marcação (inconsistência) ou use a navegação para exibir as sugestões de substituição.' : 'Não há marcação para exibir sugestão de substituição.' }}\\n          </div>\\n          <div [style.display]=\\\"hiddenElementNoSuggestion ? 'inherit' : 'none'\\\">\\n            <div><span>Regra: </span> {{ inconsistencyDetails.name }}</div>\\n            <div><span>Descrição: </span> {{ inconsistencyDetails.description }}</div>\\n            <br>\\n            <span>{{ inconsistencyDetails.suggestions?.length>1 ? 'Sugestões de substituição: ' : 'Sugestão de substituição: '}}</span>\\n            <span *ngFor=\\\"let suggestion of inconsistencyDetails.suggestions; let idx = index\\\" (click)=\\\"changeTipByCard(suggestion)\\\">\\n              <span mat-button *ngIf=\\\"inconsistencyDetails.id == suggestion.inconsistency_id\\\">\\n                <span *ngIf=\\\"idx>=1\\\">, </span><span style=\\\"border-bottom: 1px dotted black;\\\">{{ suggestion.tip }}</span>\\n              </span>\\n            </span>\\n          </div>\\n          <mat-card-actions  [style.display]=\\\"!existInconsistency()  ? 'none' : 'inherit'\\\">\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"previousSuggestion()\\\">\\n              <mat-icon class=\\\"mouse-cursor-pointer\\\"  matSuffix>{{ 'navigate_before' }}</mat-icon>\\n              Anterior\\n            </button>\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"nextSuggestion()\\\">\\n              Próxima\\n              <mat-icon class=\\\"mouse-cursor-pointer\\\"  class=\\\"mouse-cursor-pointer\\\"  matSuffix>{{ 'navigate_next' }}</mat-icon>\\n            </button>\\n          </mat-card-actions>       \\n        </mat-card>\\n        <!--Card of applied edtions-->\\n        <mat-accordion *ngIf=\\\"dataChangesInText.length!=0\\\">\\n            <mat-expansion-panel (opened)=\\\"expandChangesPainel = true\\\"\\n                                  (closed)=\\\"expandChangesPainel = false\\\"\\n                                  class=\\\"header-color\\\">\\n              <mat-expansion-panel-header>\\n                <mat-panel-title class=\\\"custom-painel-title\\\">           \\n                  {{ dataChangesInText.length > 1 ? 'Edições aplicadas no texto' : 'Edição aplicada no texto'}}\\n                </mat-panel-title>\\n              </mat-expansion-panel-header>\\n\\n              <mat-card-content>\\n              <mat-card *ngFor=\\\"let item of dataChangesInText; let idx = index\\\">\\n                  <div>DE: {{item.oldText}}</div>\\n                  <div>PARA: {{item.newText}}</div>\\n                  <button mat-button color=\\\"primary\\\"\\n                    *ngIf=\\\"!item.disabled\\\" \\n                    (click)=\\\"undoChange(item, idx)\\\">Desfazer alteração \\n                  <mat-icon class=\\\"mouse-cursor-pointer\\\"  matSuffix>{{ 'undo' }}</mat-icon>\\n                </button>\\n              </mat-card>                \\n            </mat-card-content>\\n            </mat-expansion-panel>\\n          </mat-accordion>\\n      </div>\\n  </div>\\n</form>\"","import { TestComponent } from './../../test/test.component';\nimport { TextFilterByInconsistencyComponent } from './../text-filter-by-inconsistency/text-filter-by-inconsistency.component';\nimport { TextFilterByUsersComponent } from './../text-filter-by-users/text-filter-by-users.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TextsService } from './../texts.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TextHistoricFormComponent } from '../text-historic-form/text-historic-form.component';\nimport { AuthService } from '../../login/auth.service';\nimport { TextSharedDialogComponent } from '../text-shared-dialog/text-shared-dialog.component';\n\n@Component({\n  selector: 'app-text-processed',\n  templateUrl: './text-processed.component.html',\n  styleUrls: ['./text-processed.component.css']\n})\nexport class TextProcessedComponent implements OnInit {\n\n  data: any;\n  inconsistencyDetails: any;\n  inputText: any;\n  formText: FormGroup;\n  formSave: FormGroup;\n  dataHistoric: any = [];\n  dataChangesInText: any = [];\n  openTipMatch:any = null;\n  expandChangesPainel: boolean = true;\n  nextIndex = -1;  \n  closeTooltip: boolean = false\n  lastWordId = null\n  hiddenElementNoSuggestion = false\n  editText = false;\n  filter = null;\n  dataFilter = null;\n  idText:any = null\n  userId: any = null;\n  private dataDetails = new BehaviorSubject(\"\");\n  private currentDetails = this.dataDetails.asObservable();\n  sharedDisabled:any = true\n\n  constructor(private textsService: TextsService,\n              private authService: AuthService,\n              private formBuilder: FormBuilder,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.userId = this.authService.getUserId()\n    this.formText = this.formBuilder.group({\n      editMode: false,\n      idText: [null],\n      content: [null],\n      filter: [null],\n      dataFilter: [null]\n    });\n\n    this.formSave = this.formBuilder.group({\n      id: [null ,Validators.required],\n      user: [null ,Validators.required],\n      name: [null ,Validators.required],\n      description: [Validators.required],\n      text: [null ,Validators.required],\n      foundInconsistencies: [null ,Validators.required]\n    })\n\n    this.textsService.currentMessage.subscribe(message => {\n      this.data = message\n      //console.log(\"Data: \", this.data)\n    });\n\n    this.currentDetails.subscribe(message => {\n      this.inconsistencyDetails = message\n      //console.log(\"Inconsistency details: \", this.inconsistencyDetails)\n    });\n    this.expandChangesPainel = true;\n\n    this.idText = this.activatedRoute.snapshot.paramMap.get('id')\n    if(this.data.editMode && this.idText!=null) {\n      this.sharedDisabled = false\n      this.setFormText(this.data.content, this.idText, true)      \n      this.data.idText = this.idText\n\n      this.checkText( this.formText.value )\n      \n    }\n  }\n\n  checkText(dataSource) {\n    this.textsService.postText( dataSource ).subscribe(\n      (data: any) => {\n        this.textsService.updateData(data);//shared the data\n        this.dataChangesInText = data.dataChangesInText\n    });\n  }\n \n  showData() {\n    this.textsService.currentMessage.subscribe(message => this.data = message)\n    console.log(this.data)\n  }\n  \n  newData(data) {\n    this.textsService.updateData(data);\n  }\n  \n  updateDetails (data: any){\n    this.dataDetails.next(data);\n  }\n\n  showInput(){    \n    console.log(this.formText.value)\n  }\n\n  resetColorInconsistency(item) {\n    this.lastWordId = (this.lastWordId == null) ? item.start+''+item.end : this.lastWordId;\n    document.getElementById(this.lastWordId).style.backgroundColor = '#FFFF00';\n    document.getElementById(this.lastWordId).style.color = 'rgba(0,0,0,.87)';\n    this.lastWordId = item.start+''+item.end\n    document.getElementById(this.lastWordId).style.backgroundColor = '#eff3f9';\n    document.getElementById(this.lastWordId).style.color = '#3f51b5';\n  }\n\n  openTips(id:any, item) {\n    this.openTipMatch = item;\n    console.log(item)\n    this.closeTooltip = true\n    document.getElementById(id).style.visibility = 'visible';\n\n    this.resetColorInconsistency(item);\n    this.getInconsistencyDetails(item);    \n  }\n\n  getInconsistencyDetails(item) {\n    for(let inconsistency of this.data.inconsistencies){\n      if(item.inconsistency_id == inconsistency.id){\n        this.updateDetails(inconsistency);\n        this.hiddenElementNoSuggestion = true;\n      }\n    }\n  }\n\n  closeTips(id:any) {\n    this.closeTooltip = false;\n    document.getElementById(id).style.visibility = 'hidden';\n  }\n\n  changeTipByCard(suggestion) {\n    let item = this.openTipMatch;\n    let id = item.start+''+item.end;\n    let index = null;\n\n    for(let i=0; i < this.data.matches.length; i++) {\n      let match = this.data.matches[i];\n      if( match.inconsistency_id == item.inconsistency_id &&\n          match.start == item.start &&\n          match.end == item.end && match.match) {\n        index = i;\n        break;\n      }\n    }\n\n    this.resetColorInconsistency(item);\n    this.changeTip(id, suggestion, item, index);\n  }\n\n  ignoreSuggestion(item, index) {\n    let id = item.start+''+item.end;\n    this.data.matches[index].match = false;\n    this.lastWordId = null;\n    document.getElementById(id).style.backgroundColor = 'rgb(255,255,255)';\n    document.getElementById(id).style.color = 'rgba(0,0,0,.87)';\n    document.getElementById(id).className = 'none';\n    this.updateDetails(\"\")\n    this.hiddenElementNoSuggestion = false\n  }\n\n  changeTip(id, suggestion, item, index) {\n    console.log(\"changeTip: \", id, suggestion, item, index)\n    this.nextIndex = index;\n    this.lastWordId = null;\n    this.dataChangesInText.unshift({ oldText: this.data.matches[index].content, \n                                  newText: suggestion.tip, \n                                  suggestion: suggestion.id,\n                                  idxMatch: index,\n                                  disabled: false\n                                });\n    \n    this.closeTooltip = false;\n    this.data.matches[index].match = false;\n    this.data.matches[index].content = suggestion.tip\n    document.getElementById(id).style.backgroundColor = 'rgb(255,255,255)';\n    document.getElementById(id).style.color = 'rgba(0,0,0,.87)';\n    document.getElementById(id).className = 'none';\n    this.updateDetails(\"\")\n    this.hiddenElementNoSuggestion = false\n  }\n\n  nextSuggestion() {\n    let lenghtMatches = this.data.matches.length - 1;\n\n    this.nextIndex += 1;\n\n    if((this.nextIndex + 1) >= lenghtMatches)\n      this.nextIndex = 0;\n\n    for(let i=this.nextIndex; i < this.data.matches.length; i++) {\n      let item = this.data.matches[i];\n      if((i + 1) >= lenghtMatches && this.existInconsistency()) {\n        i = 0;\n        this.nextIndex = 0;\n      }\n      \n      if(item.match) {\n        this.openTipMatch = item;\n        this.resetColorInconsistency(item);\n        this.getInconsistencyDetails(item);\n        this.nextIndex = i;\n        break;\n      }\n      this.nextIndex++;      \n    }\n  }\n\n  previousSuggestion() {\n    let lenghtMatches = this.data.matches.length - 1;\n\n    this.nextIndex -= 1;\n\n    if((this.nextIndex) <= 0)\n      this.nextIndex = lenghtMatches;\n\n    for(let i=this.nextIndex; i >= 0; i--) {\n      let item = this.data.matches[i];\n      if((i - 1) < 0  && this.existInconsistency()){\n        i = lenghtMatches;\n        this.nextIndex = lenghtMatches;\n      }\n      \n      if(item.match) {\n        this.openTipMatch = item;\n        this.resetColorInconsistency(item);\n        this.getInconsistencyDetails(item);\n        this.nextIndex = i;\n        break;\n      }\n      this.nextIndex--;\n    }\n  }\n\n  existInconsistency() {\n    let lengthMatches = 0\n    if(this.data.matches!=null)\n      lengthMatches = this.data.matches.length;\n    for(let i=0; i<lengthMatches; i++)\n      if(this.data.matches[i].match)\n        return true;\n    return false;\n  }\n\n  undoChange(tip, index) {\n    console.log(\"teste: \", tip)\n    console.log(\"Historic: \",this.dataChangesInText, index)\n    this.closeTooltip = false;\n    this.data.matches[tip.idxMatch].match = true;\n    this.data.matches[tip.idxMatch].content = tip.oldText;\n    \n    this.removeChange(index)\n  }\n\n  removeChange(index) {\n    if(this.dataChangesInText.length) {\n      if (index > -1 && !this.dataChangesInText[index].disabled) {\n        this.dataChangesInText.splice(index, 1);\n      }\n    }else {\n      this.dataChangesInText = []\n    }\n  }\n\n  returnTo(){\n    this.router.navigate(['/texts/new']);//change route\n  }\n\n  onSubmit() {\n    \n    this.data.editMode = true;\n    let text:any = \"\";\n\n    if(this.data.matches) {\n      this.data.matches.forEach(item => {\n        text += item.content;\n      });\n      this.data.content = text;\n    }\n    \n    let changes = []\n    if(this.dataChangesInText) {\n      this.dataChangesInText.forEach(element => {\n        if(!element.disabled) {\n          changes.push({ \n            oldText: element.oldText, \n            newText: element.newText, \n            suggestion: element.suggestion,\n          });\n        }\n      });\n    }\n\n    let saveText = {\n      id: this.idText,\n      user: this.userId,\n      name: \"\",\n      description: \"\",\n      text: text,\n      foundInconsistencies: [{\n        changesInText: changes,\n        foundInconsistenciesNumber: this.data.inconsistencies != null ? this.data.inconsistencies.length : 0,\n        appliedSuggestionsNumber: changes.length\n      }]\n    }\n    \n    const dialogRef = this.dialog.open(TextHistoricFormComponent, { data: {editMode: this.data.editMode, idText: this.data.idText}});\n    dialogRef.\n      afterClosed()\n      .subscribe(result => {\n        if(result) {\n          saveText.name = result.name\n          saveText.description = result.description\n          \n          if((this.idText!=null && this.data.idText!=0) && this.data.editMode) {\n            this.textsService\n              .updateHistoricText(this.idText, saveText)\n                .subscribe((response:any) => {\n                  this.data.editMode = true\n                  this.setFormText(text, this.idText, true);\n                  console.log(\"this.formText.value: \", this.formText.value)\n                  this.checkText( this.formText.value )\n\n                  this.router.navigate(['texts/text-processed/', response.id])\n                })\n          }else{\n            this.textsService\n              .postHistoryChangesText(saveText)\n                .subscribe((response:any) => {\n                  this.data.editMode = true\n                  this.setFormText(text, this.idText, true);\n\n                  this.checkText( this.formText.value )\n                  this.router.navigate(['texts/text-processed/', response.id])\n                })\n          }          \n        }\n      })     \n  }\n\n  setFormText(content, idText, editMode) {\n    this.formText.get('editMode').setValue(editMode)\n    this.formText.get('content').setValue(content)\n    if(idText!=null && idText!=0)\n      this.formText.get('idText').setValue(idText)\n  }\n\n  rebuildText() {\n    let text = \"\";\n    let dataFilter = []\n\n    for(let match of this.data.matches)\n      text += match.content;   \n    \n    if(this.data.editMode && this.idText) {\n      this.formText.get('idText').setValue(this.idText)\n      this.formText.get('editMode').setValue(true)\n    }\n\n    this.formText.get('content').setValue(text)\n\n    return this.formText.value;//;{ content: text, filter: 'USERS', dataFilter: dataFilter };    \n  }\n\n  postText() {\n    if(this.data.matches) {\n      let data:any = []\n  \n      this.textsService.currentMessageUser.subscribe(message => {\n        data = message\n      });\n  \n      this.formText.get('filter').setValue(data.filter);\n      this.formText.get('dataFilter').setValue(data.dataFilter);        \n      \n      this.textsService.postText( this.rebuildText() ).subscribe(\n        (data: any) => {\n          this.textsService.updateData(data);//shared the data\n      });\n    }\n  }\n\n  disabledChangeInText() {\n    if(this.dataChangesInText.length) {\n      this.dataChangesInText.forEach(element => {\n        element.disabled = true;\n      });\n    }\n  }\n\n  resubmitText() {\n\n    let dialog2 = this.dialog.open(TestComponent, {data: {content:'Explicar verificar novamente', buttonConfirm:'Sim, eu quero selecionar outras regras', buttonCancel:'Não, eu quero verificar com as regras atuais', title:'Deseja alterar regras de revisão'}})\n    \n    dialog2.afterClosed().subscribe(response => {\n      if(response) {\n        let dialog3 = this.dialog.open(TextFilterByUsersComponent, {height:'90%'})\n        dialog3.afterClosed().subscribe(response => {\n          this.disabledChangeInText()\n          this.postText()          \n        })        \n      } else if(response == false) {\n        this.disabledChangeInText()\n        this.postText()\n      }\n    })\n  }\n\n  postSharedTextSelected() {\n    const dialogRef = this.dialog.open(TextSharedDialogComponent, { width: '80%', disableClose: true });\n    dialogRef\n      .afterClosed()\n        .subscribe(result => {\n          if(result.length) {\n            let idUser = this.authService.getUserId()\n            let idText = this.data.idText//this.activatedRoute.params['id']   \n            let sharedUser:any = result;\n\n            let data = {\n              onwerUser: idUser,\n              sharedUser: '',\n              historyChangesText: idText\n            }\n\n            for(let user of sharedUser){\n              data.sharedUser = user\n              this.textsService.postSharedText(data).subscribe(response =>{\n                console.log(\"Enviar email selected: \", response)\n                //enviar email aqui\n              })\n            }\n        }\n      });\n    }      \n}\n\n\n\n","module.exports = \".example-form {\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\"","module.exports = \"<mat-card class=\\\"header-color-primary\\\">\\n  <mat-card-header>\\n    <mat-card-title>Compartilhar texto com outras pessoas</mat-card-title>\\n  </mat-card-header>\\n  <form class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"text\\\"\\n            placeholder=\\\"Nome ou Email\\\" \\n            matInput\\n            [formControl]=\\\"myControl\\\"\\n            [matAutocomplete]=\\\"auto\\\">\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n        <mat-option *ngFor=\\\"let option of filteredOptions | async; let idx = index\\\" \\n                    [value]=\\\"option.first_name +' ' + option.last_name + ' <' + option.email + '>'\\\"\\n                    (click)=\\\"getUserEmail(option)\\\">\\n          {{ option.first_name +' ' + option.last_name + ' <' + option.email + '>' }}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n    <mat-card [style.display]=\\\"filteredUsers.length>0 ? 'block' : 'none'\\\">\\n      <div>\\n        <span *ngFor=\\\"let item of filteredUsers; let idx = index\\\"\\n              (click)=\\\"removeEmailUser(idx)\\\" matTooltip=\\\"Remover\\\" style=\\\"border-bottom: 1px dotted black\\\">\\n          <span *ngIf=\\\"idx>=1\\\">; </span> {{ item.first_name + ' ' + item.last_name }} </span>\\n      </div>\\n    </mat-card>\\n    <mat-card-actions>\\n      <div style=\\\"float: right;\\\">\\n          <button mat-raised-button color=primary [mat-dialog-close]=\\\"userIds\\\" [disabled]=\\\"userIds.length == 0\\\">Compartilhar</button>\\n          <button mat-button color=primary [mat-dialog-close]=[]>Cancelar</button>\\n      </div>\\n    </mat-card-actions>\\n  </form>\\n</mat-card>\\n\\n\\n\"","import { MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { startWith, map } from 'rxjs/operators';\nimport { UsersService } from '../../users/users.service';\n\n@Component({\n  selector: 'app-text-shared-dialog',\n  templateUrl: './text-shared-dialog.component.html',\n  styleUrls: ['./text-shared-dialog.component.css']\n})\nexport class TextSharedDialogComponent implements OnInit {\n\n  constructor(private usersService: UsersService,\n    private matDialogRef: MatDialogRef<TextSharedDialogComponent>) { }\n\n  myControl = new FormControl();\n  options: any = [];\n  filteredOptions: Observable<any[]>;\n  optionsUsers: any = []\n  filteredUsers: any = []\n  userIds: any = []\n  \n  ngOnInit() {\n    this.usersService.getUsers().subscribe(response => { \n      this.options = response;\n      console.log(response)\n    })\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n    \n    private _filter(value: any): any[] {\n      const filterValue = value.toLowerCase();\n      let filter = this.options.filter(option => (option.first_name +' ' + option.last_name + ' <' + option.email + '>')\n                                      .toLowerCase().includes(filterValue))\n      if(filter.length == 1)\n        this.getUserEmail(filter[0])\n      return filter;\n    }\n\n    getUserEmail(user) {\n      this.filteredUsers.push(user)\n      this.userIds.push(user.id)\n      this.filteredUsers = Array.from(new Set(this.filteredUsers))//primeira opção, segunda remover email já utilizado\n      this.userIds = Array.from(new Set(this.userIds))\n      this.myControl.setValue(\"\");\n    }    \n\n    removeEmailUser(index) {\n      if(this.filteredUsers.length) {\n        if (index > -1) {\n          this.filteredUsers.splice(index, 1);\n        }\n      }\n    }\n\n    public closeModal() {\n      this.matDialogRef.close();\n    }\n}\n","module.exports = \".container-shared-table {\\n    overflow: auto;\\n    max-height: 500px;\\n    margin-top: 10px;\\n}\\n\\ntable {\\n    width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n    color: white !important;\\n}\"","module.exports = \"<div>\\n  <div fxLayout=\\\"col\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"boxButtons\\\">\\n    <div fxFlex=\\\"85%\\\">\\n      <mat-form-field fxFlex=\\\"50%\\\">\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\n        <mat-icon class=\\\"mouse-cursor-pointer\\\"  matSuffix>{{ 'search' }}</mat-icon>\\n      </mat-form-field>\\n    </div>\\n    <div [style.display]=\\\"selection.selected.length > 1 ? 'block' : 'none'\\\">\\n      <div style=\\\"float: right; padding: 10px\\\">\\n        <button mat-button color=\\\"primary\\\"\\n                (click)=\\\"deleteSharedText()\\\">\\n          Excluir selecionados \\n          <mat-icon matSuffix > {{ 'delete' }}</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  <table class=\\\"mat-elevation-z8 container-shared-table\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n    <ng-container matColumnDef=\\\"select\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                      [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                      [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n        </mat-checkbox>\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                      (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                      [checked]=\\\"selection.isSelected(row)\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"textName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Nome </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.textName }} </td>\\n    </ng-container>\\n  \\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"onwerName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Compartilhado por </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.onwerName }} </td>\\n    </ng-container>\\n  \\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"created\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Data de compartilhamento </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.created | date:'dd-MMMM-yyyy' }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"option\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n          <mat-icon class=\\\"mouse-cursor-pointer\\\"  matSuffix [style.display]=\\\"isOnlyOneSelected(element) ?'none':'inherit'\\\" (click)=\\\"redirectTo(element)\\\" class=\\\"mouse-cursor-pointer\\\">{{ 'visibility' }}</mat-icon>\\n          <mat-icon class=\\\"mouse-cursor-pointer\\\"  matSuffix [style.display]=\\\"isOnlyOneSelected(element) ?'none':'inherit'\\\" (click)=\\\"deleteSharedText(element)\\\" class=\\\"mouse-cursor-pointer\\\">{{ 'delete' }}</mat-icon>\\n        </td>\\n    </ng-container>\\n  \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\"","import { AuthService } from './../../login/auth.service';\nimport { TestComponent } from './../../test/test.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Router } from '@angular/router';\nimport { TextsService } from './../texts.service';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-text-shared-with-me',\n  templateUrl: './text-shared-with-me.component.html',\n  styleUrls: ['./text-shared-with-me.component.css']\n})\nexport class TextSharedWithMeComponent implements OnInit {\n\n  constructor(  private textsService: TextsService,\n                private router : Router,\n                private dialog: MatDialog,\n                private authService: AuthService\n  ) { }\n  dataSharedTexts: any = []\n  displayedColumns: string[] = ['select', 'textName', 'onwerName', 'created', 'option'];\n  dataSource: any = []\n  selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    let id = this.authService.getUserId()\n    this.textsService.getSharedWithMe(id).subscribe((response:any) =>{\n      this.dataSharedTexts = response\n      this.dataSource = new MatTableDataSource(response);\n      console.log(response)\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  \n  redirectTo(item) {\n    let data = item.dataId\n    data.visited = true\n    this.textsService.updateSharedText(item.id, data).subscribe(response => {\n      this.router.navigate(['texts/text-view-corrections/', item.idText])\n    })\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  isOnlyOneSelected(element) {\n    return (this.selection.selected.length == 1 && element.id == this.selection.selected[0].id) ? false : true;\n  }\n\n  refreshTable() {\n    this.textsService.getSharedWithMe( this.authService.getUserId() ).subscribe((response:any) =>{\n      this.dataSharedTexts = response\n      this.dataSource = new MatTableDataSource(response);\n      console.log(response)\n    })\n  }\n\n  deleteSharedText() {\n    let length = this.selection.selected.length\n    let title = length > 1 ? 'Deseja remover os textos compartilhados selecionados.' : 'Deseja remover o texto compatilhado?';\n    let content = 'Após essa operação ' + length +  (length > 1 ? ' registros serão excluídos.' : 'registro será excluído.');\n    const dialogRef = this.dialog.open(TestComponent, {data: {title: title, content: content, buttonConfirm: 'Sim', buttonCancel: 'Não'}});\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      if(result) {       \n        if(length) {\n          this.selection.selected.forEach((item, index) => {        \n            this.textsService.deleteSharedText(item.id).subscribe(response=>{\n              console.log(\"Foi deletado: \", item.id)\n              if(index == length-1){\n                this.refreshTable()  \n                this.selection.clear()\n              }\n            })\n          })       \n        }\n      }\n    });\n  }\n\n}\n","module.exports = \"table {\\n  width: 100%;\\n}\\n.container-shared-table {\\n  max-height: 400px;\\n  overflow: auto;\\n}\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n#boxSuggestion {\\n  padding: 10px;\\n  margin: 2px;\\n  display: inline-flex;\\n  word-break: break-all;\\n  border: 1px solid black;\\n  border-radius: 5px;\\n}\\n#boxCards {\\n  padding: 10px;\\n  margin: 2px;\\n  display: inline-flex;\\n  word-break: break-all;\\n  border-radius: 5px;\\n}\\n#text-corrections {\\n  width: 100%;\\n  min-height: 600px\\n}\"","module.exports = \"<div fxLayout=\\\"row\\\" style=\\\"margin-top: 10px\\\">\\n  <div fxFlex=\\\"100%\\\">\\n    <mat-accordion>\\n      <mat-expansion-panel (opened)=\\\"!panelOpenInfoText\\\"\\n                            (closed)=\\\"panelOpenInfoText\\\"\\n                            class=\\\"header-color\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Informações Gerais\\n          </mat-panel-title>\\n          <mat-panel-description>\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <div fxLayout=\\\"row\\\">\\n          <mat-card fxFlex=\\\"100%\\\">\\n            <div>\\n              <div><span><i>Nome:</i> {{ dataText.name }}</span></div>\\n              <div><span><i>Quantidade de Revisões:</i> {{ totalRevisionNumber }}</span></div>\\n              <div><span><i>Sugestões aplicadas:</i> {{ totalSuggestionsApplied }}</span></div>\\n              <div><span><i>Inconsistências Encontradas:</i> {{ totalInconsistenciesFound }}</span></div>\\n            </div>\\n          </mat-card>\\n        </div>\\n        <div fxLayout=\\\"row\\\">\\n            <mat-accordion fxFlex>\\n                <mat-expansion-panel (opened)=\\\"panelOpenInfoChanges\\\"\\n                                      (closed)=\\\"!panelOpenInfoChanges\\\"\\n                                      class=\\\"header-color\\\">\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      Detalhes por Revisão\\n                    </mat-panel-title>\\n                    <mat-panel-description>\\n                    </mat-panel-description>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"mat-elevation-z8 container-shared-table\\\" >\\n                    <table mat-table [dataSource]=\\\"dataSource\\\">\\n                \\n                      <!-- Name Column -->\\n                      <ng-container matColumnDef=\\\"revisionNumber\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Revisão </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.revisionNumber }} </td>\\n                      </ng-container>\\n                    \\n                      <!-- Weight Column -->\\n                      <ng-container matColumnDef=\\\"appliedSuggestionsNumber\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sugestões aplicadas </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.appliedSuggestionsNumber }} </td>\\n                      </ng-container>\\n\\n                      <!-- Weight Column -->\\n                      <ng-container matColumnDef=\\\"foundInconsistenciesNumber\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Inconsistências Encontradas </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.foundInconsistenciesNumber }} </td>\\n                      </ng-container>\\n\\n                      <!-- Weight Column -->\\n                      <ng-container matColumnDef=\\\"result\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Total de Ocorrências </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.foundInconsistenciesNumber }} </td>\\n                      </ng-container>\\n\\n                      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n                      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                    </table>\\n                  </div>                  \\n                </mat-expansion-panel>\\n              </mat-accordion>\\n          \\n        </div>     \\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n</div>\\n\\n<div fxLayout=\\\"col\\\" style=\\\"background-color: purple\\\" class=\\\"margin-top-10\\\">\\n  <div fxFlex=\\\"100%\\\" style=\\\"background-color: yellow\\\">\\n    <mat-accordion>\\n      <mat-expansion-panel (opened)=\\\"panelOpenText\\\"\\n                            (closed)=\\\"!panelOpenText\\\"\\n                            class=\\\"header-color\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Texto\\n          </mat-panel-title>\\n          <mat-panel-description>\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <textarea name=\\\"\\\" id=\\\"text-corrections\\\" readonly\\n        >{{ dataText.text }}</textarea>\\n        <!--p style=\\\"border: 1px solid lightgray\\\">{{ dataText.text }}</p-->\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n\\n  <!--div fxFlex=\\\"100%\\\" style=\\\"background-color: blue\\\">\\n    <mat-accordion>\\n      <mat-expansion-panel (opened)=\\\"panelOpenInfoChanges\\\"\\n                            (closed)=\\\"!panelOpenInfoChanges\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Alterações Aplicadas no Texto\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Currently I am {{panelOpenInfoChanges ? 'open' : 'closed'}}\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <p>I'm visible because I am open</p>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div-->\\n</div>\\n\\n\"","import { MatSort, MatTableDataSource } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { TextsService } from './../texts.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-text-view-corrections',\n  templateUrl: './text-view-corrections.component.html',\n  styleUrls: ['./text-view-corrections.component.css']\n})\nexport class TextViewCorrectionsComponent implements OnInit {\n\n  dataText:any = []\n  totalRevisionNumber = 0\n  totalInconsistenciesFound = 0\n  totalSuggestionsApplied = 0\n  constructor(  private route: ActivatedRoute,\n                private router: Router,\n                private textsService: TextsService\n  ) { }\n\n  displayedColumns: string[] = ['revisionNumber', 'appliedSuggestionsNumber', 'foundInconsistenciesNumber', 'result'];\n  dataSource: any = []\n  selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit() {\n    let id = this.route.snapshot.paramMap.get('id');\n    console.log(\"Teste id: \", id)\n\n    this.textsService\n      .getTextsHistoric(id)\n        .subscribe(\n          (response:any) => {\n            this.dataText = response\n            this.dataSource = new MatTableDataSource(response.foundInconsistencies);\n            this.getTextInfo()\n            console.log(\"TExtshared: \", response)\n          })\n  }\n  panelOpenInfoText = false\n  panelOpenText = false\n  panelOpenInfoChanges = false\n\n  getTextInfo () {\n    this.totalRevisionNumber = this.dataText.foundInconsistencies.length\n    for(let item of this.dataText.foundInconsistencies){\n      console.log(item)\n      this.totalInconsistenciesFound += item.foundInconsistenciesNumber\n      this.totalSuggestionsApplied += item.appliedSuggestionsNumber\n    }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  isOnlyOneSelected(element) {\n    return (this.selection.selected.length == 1 && element.id == this.selection.selected[0].id) ? false : true;\n  }\n}\n ","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-texts',\n  templateUrl: './texts.component.html',\n  styleUrls: ['./texts.component.css']\n})\nexport class TextsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppMaterialModule } from './../app-material/app-material.module';\nimport { TextsComponent } from './texts.component';\nimport { TextFormComponent } from './text-form/text-form.component';\nimport { TextsRoutingModule } from './texts.routing.module';\nimport { TextsService } from './texts.service';\nimport { TextProcessedComponent } from './text-processed/text-processed.component';\nimport { TextProcessedFrontComponent } from './text-processed-front/text-processed-front.component';\nimport { TextHistoricFormComponent } from './text-historic-form/text-historic-form.component';\nimport { TextHistoricComponent } from './text-historic/text-historic.component';\nimport { TextFilterByUsersComponent } from './text-filter-by-users/text-filter-by-users.component';\nimport { TextFilterByInconsistencyComponent } from './text-filter-by-inconsistency/text-filter-by-inconsistency.component';\nimport { TextSharedDialogComponent } from './text-shared-dialog/text-shared-dialog.component';\nimport { TextViewCorrectionsComponent } from './text-view-corrections/text-view-corrections.component';\nimport { TextSharedWithMeComponent } from './text-shared-with-me/text-shared-with-me.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TextsRoutingModule,\n    AppMaterialModule\n  ],\n  declarations: [\n    TextsComponent,\n    TextFormComponent,\n    TextProcessedComponent,\n    TextProcessedFrontComponent,\n    TextHistoricFormComponent,\n    TextHistoricComponent,\n    TextFilterByUsersComponent,\n    TextFilterByInconsistencyComponent,\n    TextSharedDialogComponent,\n    TextViewCorrectionsComponent,\n    TextSharedWithMeComponent\n  ],\n  providers: [\n    TextsService\n  ]\n})\nexport class TextsModule { }\n","import { TextViewCorrectionsComponent } from './text-view-corrections/text-view-corrections.component';\nimport { TextSharedDialogComponent } from './text-shared-dialog/text-shared-dialog.component';\nimport { TextFilterByInconsistencyComponent } from './text-filter-by-inconsistency/text-filter-by-inconsistency.component';\nimport { TextFilterByUsersComponent } from './text-filter-by-users/text-filter-by-users.component';\nimport { TextHistoricComponent } from './text-historic/text-historic.component';\nimport { TextHistoricFormComponent } from './text-historic-form/text-historic-form.component';\nimport { TextProcessedFrontComponent } from './text-processed-front/text-processed-front.component';\nimport { TextProcessedComponent } from './text-processed/text-processed.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TextsComponent } from './texts.component';\nimport { TextFormComponent } from './text-form/text-form.component';\nimport { TextSharedWithMeComponent } from './text-shared-with-me/text-shared-with-me.component';\n\nconst textsRoutes: Routes = [\n    { path: '', component: TextsComponent, children: [\n      { path: 'new', component: TextFormComponent },\n      { path: 'text-processed', component: TextProcessedComponent },\n      { path: 'text-processed/:id', component: TextProcessedComponent },\n      { path: 'text-processed-front', component: TextProcessedFrontComponent },\n      { path: 'text-historic-form', component: TextHistoricFormComponent },\n      { path: 'text-historic', component: TextHistoricComponent },\n      { path: 'text-filter-by-users', component: TextFilterByUsersComponent },\n      { path: 'text-shared-dialog', component: TextSharedDialogComponent },\n      { path: 'text-filter-by-inconsistency', component: TextFilterByInconsistencyComponent },\n      { path: 'text-view-corrections', component: TextViewCorrectionsComponent },\n      { path: 'text-view-corrections/:id', component: TextViewCorrectionsComponent },  \n      { path: 'text-shared-with-me', component: TextSharedWithMeComponent }                \n      /*{ path: ':id', \n        component: UserDetailsComponent,\n        resolve: { user: UsersDetailsResolver}\n     },\n      /*{ path: ':id/edit', \n        component: UserFormComponent,\n        canDeactivate: [UsersDeactivateGuard]\n      }*/\n  ]}  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(textsRoutes)],//module functionality use 'forChild'\n  exports: [RouterModule]\n})\n\nexport class TextsRoutingModule { }\n"],"sourceRoot":""}